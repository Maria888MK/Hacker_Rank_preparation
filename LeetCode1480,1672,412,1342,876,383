#   1480. Running Sum of 1D Array https://leetcode.com/problems/running-sum-of-1d-array/
# Prefix Sum Array https://www.geeksforgeeks.org/python-prefix-sum-list/
# Method 1 Using accumulate(iterable) method.
from itertools import accumulate
class Solution:
    def runningSum(self, nums: List[int]) -> List[int]:
        return list(accumulate(nums))
# Method 2  Using list comprehension + sum() + list slicing 
class Solution:
    def runningSum(self, nums: List[int]) -> List[int]:
        return [sum(nums[ : i + 1]) for i in range(len(nums))]
Method#3: Using For loop and list indexing 
class Solution:
    def runningSum(self, nums: List[int]) -> List[int]:
        res = [0]*len(nums)
        res[0] = nums[0]
        for i in range(1, len(nums)):
            res[i] = res[i-1] + nums[i]
        return res
# 1672. Richest Customer Wealth https://leetcode.com/problems/richest-customer-wealth/
class Solution:
    def maximumWealth(self, accounts: List[List[int]]) -> int:
        maxwealth = 0
        
        for customer in accounts:
            cur_customer_wealth = 0
            for bank in customer:
                cur_customer_wealth+= bank
                
            maxwealth = max(maxwealth, cur_customer_wealth )
        return maxwealth
                
